
. ~/.alias
set -o vi

export EDITOR="vim"
export SVN_EDITOR="vim"
export JAVA_HOME="/usr/lib/jvm/java-6-sun/"
export PATH="$PATH:/home/wwolf/.scripts/:/var/lib/gems/1.8/bin/"

function parse_git_branch {
	ref=$(git symbolic-ref HEAD 2> /dev/null) || return
	echo "("${ref#refs/heads/}")" 
}
function num_git_commits_ahead {
	num=$(git status 2> /dev/null | grep "Your branch is ahead of" | awk '{split($0,a," "); print a[9];}' 2> /dev/null) || return
	if [[ "$num" != "" ]]; then
		echo "+$num"
	fi
}

go() {
    target=''
    if [ $# == 0 ]; then
        target=$HOME
    else
        target=$(grep "^$1" $HOME/.go | head -1 | col2)
    fi
    if [ $target ]; then
        pushd "$target" >> /dev/null
        return
    fi
    for f in $(ls $HOME | sort); do
        echo $f | grep "^$1" > /dev/null
		if [ "$?" == "0" ]; then
			pushd $HOME/`echo $f | grep "^$1" | head -n 1` >> /dev/null
		fi
    done
    for f in $(ls $HOME/Projects | sort); do
        echo $f | grep -q "^$1"
        if [ $? -eq 0 ]; then
            pushd "$HOME/Projects/$f" >> /dev/null
            return
        fi
    done
}

# Dotfiles commit
dfc() {
	pushd ~/.dotfiles >> /dev/null
	git add .
	git add -u .
	git commit -m "automated update"
	popd >> /dev/null
}

#Bash Prompt
PS1="\[\e[0;32m\][\u@\w]\[\e[m\]\n\[\e[1;34m\][\h]\[\e[m\]\[\e[0;33m\]\$(parse_git_branch)\$(num_git_commits_ahead)\[\e[m\] : "
